{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","celular","history","push","target","EditContact","updContact","match","params","put","Header","marca","href","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","About","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f27cea0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETAR_CONTATO':\r\n            return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n        };\r\n        case 'ADICIONAR_CONTATO':\r\n            return {\r\n            ...state,\r\n            contacts: [action.payload,\r\n            ...state.contacts]\r\n        };\r\n        case 'EDITAR_CONTATO':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map\r\n                (contact =>\r\n                    contact.id === action.payload.id \r\n                    ? (contact = action.payload) \r\n                    :contact)\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount () {\r\n        const res = await axios\r\n        .get('https://jsonplaceholder.typicode.com/users')\r\n        \r\n        this.setState ({contacts: res.data});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    };\r\n};\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios\r\n            .delete (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            \r\n            dispatch({type: 'DELETAR_CONTATO', payload: id});\r\n        } catch (e) {\r\n            dispatch({type: 'DELETAR_CONTATO', payload: id});\r\n            }\r\n        };\r\n\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>\r\n                            {name} <i onClick={() =>\r\n                            this.setState({showContactInfo: !this.state.showContactInfo})} \r\n                            className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}/>\r\n                            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}}\r\n                            onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                            <Link to={`contato/editar/${id}`}>\r\n                                <i \r\n                                className=\"fas fa-pencil-alt\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    float: 'right',\r\n                                    color: 'black',\r\n                                    marginRight: '1rem'\r\n                                }}\r\n                                ></i>\r\n                            </Link>\r\n                            </h4>\r\n                        {showContactInfo ? (<ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">Email: {email}</li>\r\n                            <li className=\"list-group-item\">Celular: {phone}</li>\r\n                        </ul>) :null}\r\n                    </div>\r\n                );\r\n            }} \r\n            </Consumer>\r\n        );\r\n    };\r\n};\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n    \r\n        render() {\r\n            return (\r\n                <Consumer>\r\n                    {value => {\r\n                        const {contacts} = value;\r\n                        return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span>\r\n                                    Lista de Contatos\r\n                                </span>\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                key={contact.id} contact={contact}/>\r\n                            ))}\r\n                        </React.Fragment>\r\n                        )\r\n                    }}\r\n                </Consumer>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    value,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control', {\r\n                'is-invalid': error\r\n            })}\r\n            placeholder= {placeholder}\r\n            value={value}\r\n            onChange = {onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">\r\n            {error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({errors: { name: 'Insira um nome válido'}})\r\n            return;\r\n        }\r\n        \r\n        if (email === '') {\r\n            this.setState({errors: { email: 'Insira um email válido'}})\r\n            return;\r\n        }\r\n        \r\n        if (phone === '') {\r\n            this.setState({errors: { phone: 'Insira um número válido'}})\r\n            return;\r\n        }\r\n        \r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        const res = await axios\r\n        .post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({type: 'ADICIONAR_CONTATO', payload: res.data});\r\n\r\n        //Limpar State\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            celular:'',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Adicionar Contato\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind\r\n                                (this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Nome\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"ex. João Carlos da Silva\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"ex: joao@email.com.br\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Celular\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"(99) 98765-4321\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                    type=\"submit\"\r\n                                    value=\"Adicionar Contato\"\r\n                                    className=\"btn btn-light btn-block\"\r\n                                    /> \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );    \r\n    };\r\n};\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios\r\n        .get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState ({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({errors: { name: 'Insira um nome válido'}})\r\n            return;\r\n        }\r\n        \r\n        if (email === '') {\r\n            this.setState({errors: { email: 'Insira um email válido'}})\r\n            return;\r\n        }\r\n        \r\n        if (phone === '') {\r\n            this.setState({errors: { phone: 'Insira um número válido'}})\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch ({type: 'EDITAR_CONTATO', payload: res.data});\r\n        \r\n               //Limpar State\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            celular:'',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contato\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind\r\n                                (this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Nome\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"ex. João Carlos da Silva\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"ex: joao@email.com.br\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Celular\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"(99) 98765-4321\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                    type=\"submit\"\r\n                                    value=\"Editar Contato\"\r\n                                    className=\"btn btn-light btn-block\"\r\n                                    /> \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );    \r\n    };\r\n};\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = props => {\r\n    const {marca} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-marca\">{marca}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                            <i className=\"fas fa-home\"></i> Início\r\n                            </Link>    \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contato/adicionar\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i> Adicionar\r\n                            </Link>    \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/sobre\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"></i> Sobre\r\n                            </Link>    \r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    marca: 'Minha lista'\r\n};\r\n\r\nHeader.propTypes = {\r\n    marca: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Sobre a Lista de Contatos</h1>\r\n            <p className=\"lead\">Aplicação para Lista de Contatos</p>\r\n            <p className=\"text-secondary\">Versão Xavastator 2.6</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display4\"><span className=\"text-danger\">404</span> PÁGINA</h1>\r\n            <h1 className=\"display4\">NÃO ENCONTRADA</h1>\r\n            <p className=\"lead\">Desculpe, essa página não existe.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\ncomponentDidMount () {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n      title: data.title,\r\n      body: data.body\r\n  }));\r\n}\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component { \n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header marca=\"Contatos\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component= {Contacts} />\n              <Route exact path=\"/contato/adicionar\" component= {AddContact} />\n              <Route exact path=\"/contato/editar/:id\" component= {EditContact} />\n              <Route exact path=\"/sobre\" component= {About} />\n              <Route exact path=\"/test\" component= {Test} />\n              <Route component= {NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}